[
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics.html",
    "href": "posts/2025/Lifestyle/QuartoBasics.html",
    "title": "Quarto はじめて良かったこと",
    "section": "",
    "text": "A Blog Entry on Bayesian Computation by an Applied Mathematician\n$$\n$$"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics.html#使い方の概要",
    "href": "posts/2025/Lifestyle/QuartoBasics.html#使い方の概要",
    "title": "Quarto はじめて良かったこと",
    "section": "1 使い方の概要",
    "text": "1 使い方の概要\n\n1.1 はじめに\n本サイトは Quarto と，GitHub Actions によってホスティングされている．\n\n\n\n\n\n\n\nLévy 過程を見てみよう など，コードと数式を併せて書いている Jupyter Notebook のようなページ\nCV など，HTML と PDF の両方で見れるページ\nZig-Zag サンプラー など，HTML とスライド (reveal.js) の両方で見れるページ\n本ページなど，HTML とスライド (pptx)，typst PDF と LaTeX PDF と reveal.js のさまざまで見れるページ\n\n\n\n\n\n\n\n\n\n\n注\n\n\n\n\n\nスマホでは別フォーマットのページのリンクは表示されないようである．\n\n\n\n\n\nCode\nusing Plots\n\np = plot(sin, \n     x-&gt;sin(2x), \n     0, \n     2π, \n     leg=false, \n     fill=(0,:lavender))\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: Parametric Plots\n\n\n\n\nQuarto ではこのような数式・コードが共存するドキュメントが，極めて簡単に＋凡ゆるフォーマットで作成できる．\n計算統計の研究をしている筆者にとっては何より，数式とコードが自然に共存する PDF を簡単に書けること，そして自学のためのノートがそのまま HTML としてブログの形で公開できることが，大変嬉しかった．\n特に VSCode の拡張機能と組み合わせれば，RStudio のような隙のない統合開発環境が得られる．1\n基本的な仕組みとして，自分で作成するのは .qmdファイルのみである．\nその後はquarto renderコマンドにより，\n\n\n\n\n\n\n\nコードブロックは Jupyter によって処理され，\n全体は markdown に変換され，\nPandoc によってpdf, html, word など好きな形式に最終出力できる．\n\n\n\n\n拡張機能をオンにした VSCode ではRun Cellボタンもあるので，ノートブック全体を毎度ビルドせずとも，コードブロックごとに実行して結果を見ることもできる．\nCtrl+Enter で１行ごとに実行できる操作感は RStudio と同じである．\n\n\n1.2 美点\n\n\n\n\n\n\n\nレンダリングがとんでもなく速い．体感で TeX の10分の1である．\nそれでいて数式とコードブロックを併在させることが出来る．なお，明かに TeX を意識していることがわかる使用感になっているし，本の作成も可能としている．\n（ちょっと使いにくい）ブラウザ上ではなく，好きなエディタで動く．Jupyter Notebook が続かない筆者にとって，この点は肝要である．\n私用の勉強ノートとしても使えると同時に，内容そのままブログとして公開できる．\nプレゼンテーションの作成にも使える．\nすごい細かいが，例えば project type を website としたリポジトリでquarto renderをしても，不要なファイルが自動で削除される．このような点がライトユーザーでもとにかく使いやすい．\nさらにインタラクティブな機能を実現したブログを作ってみたい．\n\n\n\n\n\n\n1.3 YAML Header\n各ファイルの冒頭に YAML block を用意することで，ノートブックの詳細を調整できる（参照：HTML Options）．\n例えば本ページでは次のとおり：\n---\ntitle: \"Quarto はじめて良かった\"\nauthor: \"司馬博文\"\ndate: \"11/4/2023\"\ndate-modified: \"7/7/2024\"\ncategories: [Lifestyle]\nabstract: Quarto は TeX のような使用感で，数式とコードが併存する文章を書き，１つのソースファイルから PDF, HTML, Word, Reveal.js, PowerPoint などの多様な形式に出力できる次世代の執筆環境である．TeX, RStudio, Jupyter Notebook のいずれかに慣れている人であれば，極めて手軽に Quarto を使うことができる．\nabstract-title: 概要\nformat:\n  html:\n    mainfont: \"Gill Sans\"\n    theme: minty\n    css: assets/styles.css\n    toc: true\n    number-sections: true\n    highlight-style: ayu\n    code-block-border-left: \"#7CC4AC\"\n    code-overflow: scroll\n    toc-title: \"目次\"\n    abstract-title: \"概要\"\n---\n\n\n1.4 本文の書き方\n\n1.4.1 数式\n本文は markdown 記法で書く．数式も使える：\n\\[\n\\operatorname{P}[\\lvert\\xi\\rvert&lt;t]\\le2e^{-\\frac{t^2}{2\\sigma^2}},\\qquad t&gt;0.\n\\]\n\n\n1.4.2 コード\nまた，コードブロックにもコメントアウトと接頭辞の組み合わせ #| を前につけることでYAMLで指示が出せる（参照：指示のリスト）．上のコードブロックには\n#| label: fig-polar\n#| fig-cap: \"A line plot on a polar axis\"\nと追加されているために，出力された図にラベリングとキャプションが付いているのである．\npip3 install jupyter-cache\nが必要であることに注意．\n\n\n\n1.5 カーネルの選択\n&gt; python3 -m venv GenAI\n\n&gt; source GenAI/bin/activate\nにより仮想環境を作成して入れるが，この環境を Jupyter notebook で使うにはもう一手間必要である．\n&gt; pip install ipykernel\n\n&gt; python -m ipykernel install --user --name=GenAI\nすると\njupyter kernelspec list\nにより見つかるようになっている．YAML header で jupyter: genai と指定すれば良い．"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics.html#website-の作り方",
    "href": "posts/2025/Lifestyle/QuartoBasics.html#website-の作り方",
    "title": "Quarto はじめて良かったこと",
    "section": "2 Website の作り方",
    "text": "2 Website の作り方\n公式 Guide を参考．\n\n2.1 Source Branchをmainと別ける\nまずgh-pagesという全く新しいブランチを作成する．既存のリポジトリのコミット履歴とは独立している新しいブランチを作るときは--orphanオプションが利用される．\n\n\nTerminal\n\ngit checkout --orphan gh-pages\ngit reset --hard # make sure all changes are committed before running this!\ngit commit --allow-empty -m \"Initialising gh-pages branch\"\ngit push origin gh-pages\ngit checkout main\n\n基本gh-pagesブランチには自分では立ち入らない．\n\n\n2.2 Publishコマンドによるサイトの公開\nmainブランチにいることを確認して，\n\n\nTerminal\n\nquarto publish gh-pages\n\nを実行．\nGitHubの方の設定Settings: Pagesで，Sourceをgh-pagesブランチの/(root)にしていることを確認すれば，これで無事サイトが公開されていることが確認できる．\n\n\n2.3 GitHub Action の使用\nさらに，ローカル上でrenderするのではなく，コミットする度にGitHub上でレンダリングしてもらえるように自動化することもできる．こうするとスマホからも自分のサイトが更新できる．\nまず，GitHubの設定のActionsセクションのWorkflow permissionsから，読み書きの権限をGitHub Actionに付与する．\n続いて，次の内容のファイルを.github/workflows/publish.ymlに書き込む：\n\n\n.github/workflows/publish.yml\n\non:\n  workflow_dispatch:\n  push:\n    branches: main\n\nname: Quarto Publish\n\njobs:\n  build-deploy:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v4\n\n      - name: Set up Quarto\n        uses: quarto-dev/quarto-actions/setup@v2\n        with:\n          tinytex: true  # https://github.com/quarto-dev/quarto-actions/tree/main/setup\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Setting GH_TOKEN is recommended as installing TinyTeX will query the github API.\n\n      - name: Render and Publish\n        uses: quarto-dev/quarto-actions/publish@v2\n        with:\n          target: gh-pages\n          # render: false  # https://quarto.org/docs/publishing/github-pages.html#additional-options\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n途中，tinytex: true とすることで，１つのページを HTML と pdf の両方で閲覧可能になる．本ブログでは，CV のページ でこの機能を使っている．\nこれで，mainブランチにコミットする度に，GitHub上でrenderが実行されることとなる．"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics.html#pdf-の作り方",
    "href": "posts/2025/Lifestyle/QuartoBasics.html#pdf-の作り方",
    "title": "Quarto はじめて良かったこと",
    "section": "3 PDF の作り方",
    "text": "3 PDF の作り方\n\n3.1 LuaLaTeX を使う方法\nLuaLaTeX を利用することで日本語を含んだ PDF を作成できる．\n\n\nreport.qmd\n\ntitle: \"タイトル\"\nauthor: 司馬博文\ndate: 2023/12/11\nformat:\n  pdf:\n    toc: true\n    number-sections: true\n    urlcolor: minty\n    template-partials: \n      - ../../../assets/before-title.tex\n    keep-tex: true\n    block-headings: false\n    pdf-engine: lualatex\n    documentclass: ltjsarticle\n\n\n3.1.1 LuaLaTeX の注意\n\\int_{\\mathbb{R}}\nのような記法は，pdfLaTeX ではなぜかコンパイルが通るが，LuaLaTeX （や殆どの pdfLaTeX 以外のエンジン）ではエラーになる．\n\n\n3.1.2 LuaLaTeX の欠点\nltjsarticle クラスでは\nFont \\JY3/mc/m/n/10=file:HaranoAjiMincho-Regular.otf:-kern;jfm=ujis at 9.24713pt not loadable: metric data not found or bad.\n&lt;to be read again&gt; \nrelax \nl.79 \\kanjiencoding{JY3}\\selectfont\n                                 \\adjustbaseline\nというエラーが．一方で，bxjsarticle クラスでは\nLaTeX Error: File `haranoaji.sty' not found.\n\nType X to quit or &lt;RETURN&gt; to proceed,\nor enter new name. (Default extension: sty)\n\nEnter file name: \n! Emergency stop.\n&lt;read *&gt;\nというエラーが出る．\nローカルではインストールすれば良いだけであるが，これを GitHub Actions 上で実現する方法を考えあぐねていた．\n\n\n\n\n\n\n注（TeX Live のアップデート方法）\n\n\n\n\n\n年度を跨いだ TeX Live manager のアップデートは，次のようにする必要がある：\nwget http://mirror.ctan.org/systems/texlive/tlnet/update-tlmgr-latest.sh\nchmod +x update-tlmgr-latest.sh\nsudo ./update-tlmgr-latest.sh\n\n\n\n\n\n3.1.3 LuaLaTeX と日本語フォント\nなぜか\n\\usepackage[haranoaji,nfssonly]{luatexja-preset}\nで変わるのは英語文字だけである．\n\n\n3.1.4 GitHub Actions の修正\n次のようにして，Set up Quarto と Render and Publish の間に，TinyTeX と haranoaji.sty のインストールを使いすることで，GitHub 上でもレンダリングが可能になる．\n\n\npublish.yml\n\n- name: 'Install TinyTeX'  # https://github.com/quarto-dev/quarto-actions/tree/main/setup\n  env:\n    QUARTO_PRINT_STACK: true\n    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Setting GH_TOKEN is recommended as installing TinyTeX will query the github API.\n  run: |\n    quarto install tool tinytex --log-level warning\n    case $RUNNER_OS in \n      \"Linux\")\n          echo \"$HOME/bin\" &gt;&gt; $GITHUB_PATH\n          export PATH=\"$HOME/bin:$PATH\"\n          ;;\n       \"macOS\")\n          TLMGR_PATH=$(dirname $(find ~/Library/TinyTeX -name tlmgr))\n          echo $TLMGR_PATH &gt;&gt; $GITHUB_PATH\n          export PATH=\"$TLMGR_PATH:$PATH\"\n          ;;\n       \"Windows\")\n          TLMGR_PATH=$(dirname $(find $APPDATA/TinyTeX -name tlmgr.bat))\n          echo $TLMGR_PATH &gt;&gt; $GITHUB_PATH\n          export PATH=\"$TLMGR_PATH:$PATH\"\n          ;;\n        *)\n          echo \"$RUNNER_OS not supported\"\n          exit 1\n          ;;\n    esac\n    echo \"TinyTeX installed !\"\n    tlmgr install haranoaji   # Install haranoaji.sty\n  shell: bash\n\n\n\n3.1.5 ローカルの TinyTeX に haranoaji.sty をインストールする方法\ntlmgr install haranoaji\nだと，すでに TeX Live がローカルに存在する場合は，そちらにインストールされてしまう．\nquarto install tinytex\nでインストールされる TinyTeX は，ホームディレクトリ下の ~/Liberary/TinyTeX/ の bin 内にインストールされる．2\nそこの，tlmgr がインストールされている場所まで行って，\ntlmgr install haranoaji\nを実行すると良い．\n❯ ./tlmgr install haranoaji        \ntlmgr: package repository https://mirror.las.iastate.edu/tex-archive/systems/texlive/tlnet/ (verified)\n[1/1, ??:??/??:??] install: haranoaji [25570k]\nrunning mktexlsr ...\ndone running mktexlsr.\ntlmgr: package log updated: ~/Library/TinyTeX/texmf-var/web2c/tlmgr.log\ntlmgr: command log updated: ~/Library/TinyTeX/texmf-var/web2c/tlmgr-commands.log\n\n\n\n3.2 Typst を用いる方法\nHP\n使うフォントは次のように，Google Fonts を通じて，GitHub Actions 上でインストールすることもできるだろう：\nwget https://github.com/google/fonts/raw/main/ofl/bizudpgothic/BIZUDPGothic-Regular.ttf\nwget https://github.com/google/fonts/raw/main/ofl/bizudpgothic/BIZUDPGothic-Bold.ttf\ntypst の pdf は数式の処理がまだ納得のいく設定が見つかっていないが，コードの扱いが非常に自然で，出来上がりも美しい．\nただし，事前に GitHub Actions の環境上に対応する日本語フォントを用意しておく必要がある．\n{yml filename=\"publish.yml\"} - name: Install Japanese Fonts   env:     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Setting GH_TOKEN is recommended as installing TinyTeX will query the github API.   run: |     git clone https://github.com/yuru7/udev-gothic.git     cd udev-gothic     sudo cp -r ./source /usr/share/fonts/truetype/udev-gothic     sudo fc-cache -f -v"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics.html#スライドの作り方",
    "href": "posts/2025/Lifestyle/QuartoBasics.html#スライドの作り方",
    "title": "Quarto はじめて良かったこと",
    "section": "4 スライドの作り方",
    "text": "4 スライドの作り方"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics.html#footnotes",
    "href": "posts/2025/Lifestyle/QuartoBasics.html#footnotes",
    "title": "Quarto はじめて良かったこと",
    "section": "Footnotes",
    "text": "Footnotes\n\n\n特に，VSCode ではビジュアルモードでの編集もサポートされており，Jupyter Notebookと全く同じ使用感で始められる．↩︎\nMaxOS では．quarto --paths で確認可能．↩︎"
  },
  {
    "objectID": "static/AllCategories.html",
    "href": "static/AllCategories.html",
    "title": "Categories",
    "section": "",
    "text": "公法\n\n憲法\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nNo matching items\n\n\n\n\n行政法\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics_slide.html#はじめに",
    "href": "posts/2025/Lifestyle/QuartoBasics_slide.html#はじめに",
    "title": "Quarto はじめて良かったこと",
    "section": "1.1 はじめに",
    "text": "1.1 はじめに\n本サイトは Quarto と，GitHub Actions によってホスティングされている．\n\n\n\n\nLévy 過程を見てみよう など，コードと数式を併せて書いている Jupyter Notebook のようなページ\nCV など，HTML と PDF の両方で見れるページ\nZig-Zag サンプラー など，HTML とスライド (reveal.js) の両方で見れるページ\n本ページなど，HTML とスライド (pptx)，typst PDF と LaTeX PDF と reveal.js のさまざまで見れるページ\n\n\n\n\n\n\n\n\n注\n\n\nスマホでは別フォーマットのページのリンクは表示されないようである．\n\n\n\n\n\nusing Plots\n\np = plot(sin, \n     x-&gt;sin(2x), \n     0, \n     2π, \n     leg=false, \n     fill=(0,:lavender))\n\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: Parametric Plots\n\n\n\n\nQuarto ではこのような数式・コードが共存するドキュメントが，極めて簡単に＋凡ゆるフォーマットで作成できる．\n計算統計の研究をしている筆者にとっては何より，数式とコードが自然に共存する PDF を簡単に書けること，そして自学のためのノートがそのまま HTML としてブログの形で公開できることが，大変嬉しかった．\n特に VSCode の拡張機能と組み合わせれば，RStudio のような隙のない統合開発環境が得られる．1\n基本的な仕組みとして，自分で作成するのは .qmdファイルのみである．\nその後はquarto renderコマンドにより，\n\n\n\n\nコードブロックは Jupyter によって処理され，\n全体は markdown に変換され，\nPandoc によってpdf, html, word など好きな形式に最終出力できる．\n\n\n\n\n拡張機能をオンにした VSCode ではRun Cellボタンもあるので，ノートブック全体を毎度ビルドせずとも，コードブロックごとに実行して結果を見ることもできる．\nCtrl+Enter で１行ごとに実行できる操作感は RStudio と同じである．\n特に，VSCode ではビジュアルモードでの編集もサポートされており，Jupyter Notebookと全く同じ使用感で始められる．"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics_slide.html#美点",
    "href": "posts/2025/Lifestyle/QuartoBasics_slide.html#美点",
    "title": "Quarto はじめて良かったこと",
    "section": "1.2 美点",
    "text": "1.2 美点\n\n\n\n\nレンダリングがとんでもなく速い．体感で TeX の10分の1である．\nそれでいて数式とコードブロックを併在させることが出来る．なお，明かに TeX を意識していることがわかる使用感になっているし，本の作成も可能としている．\n（ちょっと使いにくい）ブラウザ上ではなく，好きなエディタで動く．Jupyter Notebook が続かない筆者にとって，この点は肝要である．\n私用の勉強ノートとしても使えると同時に，内容そのままブログとして公開できる．\nプレゼンテーションの作成にも使える．\nすごい細かいが，例えば project type を website としたリポジトリでquarto renderをしても，不要なファイルが自動で削除される．このような点がライトユーザーでもとにかく使いやすい．\nさらにインタラクティブな機能を実現したブログを作ってみたい．"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics_slide.html#yaml-header",
    "href": "posts/2025/Lifestyle/QuartoBasics_slide.html#yaml-header",
    "title": "Quarto はじめて良かったこと",
    "section": "1.3 YAML Header",
    "text": "1.3 YAML Header\n各ファイルの冒頭に YAML block を用意することで，ノートブックの詳細を調整できる（参照：HTML Options）．\n例えば本ページでは次のとおり：\n---\ntitle: \"Quarto はじめて良かった\"\nauthor: \"司馬博文\"\ndate: \"11/4/2023\"\ndate-modified: \"7/7/2024\"\ncategories: [Lifestyle]\nabstract: Quarto は TeX のような使用感で，数式とコードが併存する文章を書き，１つのソースファイルから PDF, HTML, Word, Reveal.js, PowerPoint などの多様な形式に出力できる次世代の執筆環境である．TeX, RStudio, Jupyter Notebook のいずれかに慣れている人であれば，極めて手軽に Quarto を使うことができる．\nabstract-title: 概要\nformat:\n  html:\n    mainfont: \"Gill Sans\"\n    theme: minty\n    css: assets/styles.css\n    toc: true\n    number-sections: true\n    highlight-style: ayu\n    code-block-border-left: \"#7CC4AC\"\n    code-overflow: scroll\n    toc-title: \"目次\"\n    abstract-title: \"概要\"\n---"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics_slide.html#本文の書き方",
    "href": "posts/2025/Lifestyle/QuartoBasics_slide.html#本文の書き方",
    "title": "Quarto はじめて良かったこと",
    "section": "1.4 本文の書き方",
    "text": "1.4 本文の書き方\n1.4.1 数式\n本文は markdown 記法で書く．数式も使える：\n\\[\n\\operatorname{P}[\\lvert\\xi\\rvert&lt;t]\\le2e^{-\\frac{t^2}{2\\sigma^2}},\\qquad t&gt;0.\n\\]\n1.4.2 コード\nまた，コードブロックにもコメントアウトと接頭辞の組み合わせ #| を前につけることでYAMLで指示が出せる（参照：指示のリスト）．上のコードブロックには\n#| label: fig-polar\n#| fig-cap: \"A line plot on a polar axis\"\nと追加されているために，出力された図にラベリングとキャプションが付いているのである．\npip3 install jupyter-cache\nが必要であることに注意．"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics_slide.html#カーネルの選択",
    "href": "posts/2025/Lifestyle/QuartoBasics_slide.html#カーネルの選択",
    "title": "Quarto はじめて良かったこと",
    "section": "1.5 カーネルの選択",
    "text": "1.5 カーネルの選択\n&gt; python3 -m venv GenAI\n\n&gt; source GenAI/bin/activate\nにより仮想環境を作成して入れるが，この環境を Jupyter notebook で使うにはもう一手間必要である．\n&gt; pip install ipykernel\n\n&gt; python -m ipykernel install --user --name=GenAI\nすると\njupyter kernelspec list\nにより見つかるようになっている．YAML header で jupyter: genai と指定すれば良い．"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics_slide.html#source-branchをmainと別ける",
    "href": "posts/2025/Lifestyle/QuartoBasics_slide.html#source-branchをmainと別ける",
    "title": "Quarto はじめて良かったこと",
    "section": "2.1 Source Branchをmainと別ける",
    "text": "2.1 Source Branchをmainと別ける\nまずgh-pagesという全く新しいブランチを作成する．既存のリポジトリのコミット履歴とは独立している新しいブランチを作るときは--orphanオプションが利用される．\n\n\nTerminal\n\ngit checkout --orphan gh-pages\ngit reset --hard # make sure all changes are committed before running this!\ngit commit --allow-empty -m \"Initialising gh-pages branch\"\ngit push origin gh-pages\ngit checkout main\n\n基本gh-pagesブランチには自分では立ち入らない．"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics_slide.html#publishコマンドによるサイトの公開",
    "href": "posts/2025/Lifestyle/QuartoBasics_slide.html#publishコマンドによるサイトの公開",
    "title": "Quarto はじめて良かったこと",
    "section": "2.2 Publishコマンドによるサイトの公開",
    "text": "2.2 Publishコマンドによるサイトの公開\nmainブランチにいることを確認して，\n\n\nTerminal\n\nquarto publish gh-pages\n\nを実行．\nGitHubの方の設定Settings: Pagesで，Sourceをgh-pagesブランチの/(root)にしていることを確認すれば，これで無事サイトが公開されていることが確認できる．"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics_slide.html#github-action-の使用",
    "href": "posts/2025/Lifestyle/QuartoBasics_slide.html#github-action-の使用",
    "title": "Quarto はじめて良かったこと",
    "section": "2.3 GitHub Action の使用",
    "text": "2.3 GitHub Action の使用\nさらに，ローカル上でrenderするのではなく，コミットする度にGitHub上でレンダリングしてもらえるように自動化することもできる．こうするとスマホからも自分のサイトが更新できる．\nまず，GitHubの設定のActionsセクションのWorkflow permissionsから，読み書きの権限をGitHub Actionに付与する．\n続いて，次の内容のファイルを.github/workflows/publish.ymlに書き込む：\n\n\n.github/workflows/publish.yml\n\non:\n  workflow_dispatch:\n  push:\n    branches: main\n\nname: Quarto Publish\n\njobs:\n  build-deploy:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v4\n\n      - name: Set up Quarto\n        uses: quarto-dev/quarto-actions/setup@v2\n        with:\n          tinytex: true  # https://github.com/quarto-dev/quarto-actions/tree/main/setup\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Setting GH_TOKEN is recommended as installing TinyTeX will query the github API.\n\n      - name: Render and Publish\n        uses: quarto-dev/quarto-actions/publish@v2\n        with:\n          target: gh-pages\n          # render: false  # https://quarto.org/docs/publishing/github-pages.html#additional-options\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n途中，tinytex: true とすることで，１つのページを HTML と pdf の両方で閲覧可能になる．本ブログでは，CV のページ でこの機能を使っている．\nこれで，mainブランチにコミットする度に，GitHub上でrenderが実行されることとなる．"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics_slide.html#lualatex-を使う方法",
    "href": "posts/2025/Lifestyle/QuartoBasics_slide.html#lualatex-を使う方法",
    "title": "Quarto はじめて良かったこと",
    "section": "3.1 LuaLaTeX を使う方法",
    "text": "3.1 LuaLaTeX を使う方法\nLuaLaTeX を利用することで日本語を含んだ PDF を作成できる．\n\n\nreport.qmd\n\ntitle: \"タイトル\"\nauthor: 司馬博文\ndate: 2023/12/11\nformat:\n  pdf:\n    toc: true\n    number-sections: true\n    urlcolor: minty\n    template-partials: \n      - ../../../assets/before-title.tex\n    keep-tex: true\n    block-headings: false\n    pdf-engine: lualatex\n    documentclass: ltjsarticle\n\n3.1.1 LuaLaTeX の注意\n\\int_{\\mathbb{R}}\nのような記法は，pdfLaTeX ではなぜかコンパイルが通るが，LuaLaTeX （や殆どの pdfLaTeX 以外のエンジン）ではエラーになる．\n3.1.2 LuaLaTeX の欠点\nltjsarticle クラスでは\nFont \\JY3/mc/m/n/10=file:HaranoAjiMincho-Regular.otf:-kern;jfm=ujis at 9.24713pt not loadable: metric data not found or bad.\n&lt;to be read again&gt; \nrelax \nl.79 \\kanjiencoding{JY3}\\selectfont\n                                 \\adjustbaseline\nというエラーが．一方で，bxjsarticle クラスでは\nLaTeX Error: File `haranoaji.sty' not found.\n\nType X to quit or &lt;RETURN&gt; to proceed,\nor enter new name. (Default extension: sty)\n\nEnter file name: \n! Emergency stop.\n&lt;read *&gt;\nというエラーが出る．\nローカルではインストールすれば良いだけであるが，これを GitHub Actions 上で実現する方法を考えあぐねていた．\n\n\n\n\n注（TeX Live のアップデート方法）\n\n\n年度を跨いだ TeX Live manager のアップデートは，次のようにする必要がある：\nwget http://mirror.ctan.org/systems/texlive/tlnet/update-tlmgr-latest.sh\nchmod +x update-tlmgr-latest.sh\nsudo ./update-tlmgr-latest.sh\n\n\n\n\n3.1.3 LuaLaTeX と日本語フォント\nなぜか\n\\usepackage[haranoaji,nfssonly]{luatexja-preset}\nで変わるのは英語文字だけである．\n3.1.4 GitHub Actions の修正\n次のようにして，Set up Quarto と Render and Publish の間に，TinyTeX と haranoaji.sty のインストールを使いすることで，GitHub 上でもレンダリングが可能になる．\n\n\npublish.yml\n\n- name: 'Install TinyTeX'  # https://github.com/quarto-dev/quarto-actions/tree/main/setup\n  env:\n    QUARTO_PRINT_STACK: true\n    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Setting GH_TOKEN is recommended as installing TinyTeX will query the github API.\n  run: |\n    quarto install tool tinytex --log-level warning\n    case $RUNNER_OS in \n      \"Linux\")\n          echo \"$HOME/bin\" &gt;&gt; $GITHUB_PATH\n          export PATH=\"$HOME/bin:$PATH\"\n          ;;\n       \"macOS\")\n          TLMGR_PATH=$(dirname $(find ~/Library/TinyTeX -name tlmgr))\n          echo $TLMGR_PATH &gt;&gt; $GITHUB_PATH\n          export PATH=\"$TLMGR_PATH:$PATH\"\n          ;;\n       \"Windows\")\n          TLMGR_PATH=$(dirname $(find $APPDATA/TinyTeX -name tlmgr.bat))\n          echo $TLMGR_PATH &gt;&gt; $GITHUB_PATH\n          export PATH=\"$TLMGR_PATH:$PATH\"\n          ;;\n        *)\n          echo \"$RUNNER_OS not supported\"\n          exit 1\n          ;;\n    esac\n    echo \"TinyTeX installed !\"\n    tlmgr install haranoaji   # Install haranoaji.sty\n  shell: bash\n\n3.1.5 ローカルの TinyTeX に haranoaji.sty をインストールする方法\ntlmgr install haranoaji\nだと，すでに TeX Live がローカルに存在する場合は，そちらにインストールされてしまう．\nquarto install tinytex\nでインストールされる TinyTeX は，ホームディレクトリ下の ~/Liberary/TinyTeX/ の bin 内にインストールされる．1\nそこの，tlmgr がインストールされている場所まで行って，\ntlmgr install haranoaji\nを実行すると良い．\n❯ ./tlmgr install haranoaji        \ntlmgr: package repository https://mirror.las.iastate.edu/tex-archive/systems/texlive/tlnet/ (verified)\n[1/1, ??:??/??:??] install: haranoaji [25570k]\nrunning mktexlsr ...\ndone running mktexlsr.\ntlmgr: package log updated: ~/Library/TinyTeX/texmf-var/web2c/tlmgr.log\ntlmgr: command log updated: ~/Library/TinyTeX/texmf-var/web2c/tlmgr-commands.log\nMaxOS では．quarto --paths で確認可能．"
  },
  {
    "objectID": "posts/2025/Lifestyle/QuartoBasics_slide.html#typst-を用いる方法",
    "href": "posts/2025/Lifestyle/QuartoBasics_slide.html#typst-を用いる方法",
    "title": "Quarto はじめて良かったこと",
    "section": "3.2 Typst を用いる方法",
    "text": "3.2 Typst を用いる方法\nHP\n使うフォントは次のように，Google Fonts を通じて，GitHub Actions 上でインストールすることもできるだろう：\nwget https://github.com/google/fonts/raw/main/ofl/bizudpgothic/BIZUDPGothic-Regular.ttf\nwget https://github.com/google/fonts/raw/main/ofl/bizudpgothic/BIZUDPGothic-Bold.ttf\ntypst の pdf は数式の処理がまだ納得のいく設定が見つかっていないが，コードの扱いが非常に自然で，出来上がりも美しい．\nただし，事前に GitHub Actions の環境上に対応する日本語フォントを用意しておく必要がある．\n{yml filename=\"publish.yml\"} - name: Install Japanese Fonts   env:     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Setting GH_TOKEN is recommended as installing TinyTeX will query the github API.   run: |     git clone https://github.com/yuru7/udev-gothic.git     cd udev-gothic     sudo cp -r ./source /usr/share/fonts/truetype/udev-gothic     sudo fc-cache -f -v"
  },
  {
    "objectID": "posts/2025/FunctionalAnalysis/MinkowskiSum.html",
    "href": "posts/2025/FunctionalAnalysis/MinkowskiSum.html",
    "title": "Measurability of the Minkowski Sum of Two Sets",
    "section": "",
    "text": "This entry has grown out of a question I answered on MathOverflow. I will try to explain the question and my answer in a more leisurely manner here."
  },
  {
    "objectID": "posts/2025/FunctionalAnalysis/MinkowskiSum.html#introduction",
    "href": "posts/2025/FunctionalAnalysis/MinkowskiSum.html#introduction",
    "title": "Measurability of the Minkowski Sum of Two Sets",
    "section": "1 Introduction",
    "text": "1 Introduction\n\n\n\n\n\n\nQuestion\n\n\n\nFor Borel sets \\(A,B\\in\\mathcal{B}(\\mathbb{R}^n)\\), Minkowski sum is defined as \\[\nA+B:=\\left\\{a+b\\in\\mathbb{R}^n\\mid a\\in A,b\\in B\\right\\}.\n\\] We are interested in the following questions:\n\nUnder what conditions is \\(A+B\\) Borel?\nFor what \\(A,B\\in\\mathcal{B}(\\mathbb{R}^n)\\) is \\(A+B\\) not Borel?\n\n\n\n\\(A+B\\) being an image of a continuous mapping \\(+:\\mathbb{R}^n\\times\\mathbb{R}^n\\to\\mathbb{R}^n\\), \\(A+B\\) is an analytic (a.k.a. Souslin) set. Therefore, \\(A+B\\) is Lebesgue measurable, given all Souslin sets are universally measurable.1\nA statistician or probability theorist may come across this problem when considering isoperimetric inequalities. For example, the one by (Borell, 1975) and (Sudakov and Tsirel’son, 1974) goes as follows:\n\n\n\n\n\n\nTheorem2 (Gaussian isoperimetric inequality)\n\n\n\nLet \\(\\gamma_n:=\\mathrm{N}_n(0,I_n)\\) be the standard Gaussian measure on \\(\\mathbb{R}^n\\), \\(u\\in\\partial B^n\\subset\\mathbb{R}^n\\) a unit vector, \\(A\\in\\mathcal{B}(\\mathbb{R}^n)\\) be a Borel measurable set, and \\[\nH_a:=\\left\\{x\\in\\mathbb{R}^n\\mid(x|u)\\le a\\right\\},\\quad a\\in\\mathbb{R},\n\\] be a affine half-space satisfying \\(\\gamma_n(H_a)=\\gamma_n(A)\\). Then, the following inequality holds for all \\(\\epsilon&gt;0\\): \\[\n\\gamma_n(H_{a+\\epsilon})=\\gamma_n(A_\\epsilon),\\qquad\\epsilon&gt;0,\n\\] where \\(B^n\\overset{\\textrm{closed}}{\\subset}\\mathbb{R}^n\\) is a closed unit ball centered at the origin, and \\[\nA_\\epsilon:=\\left\\{x\\in\\mathbb{R}^n\\:\\middle|\\:\\inf_{y\\in A}\\|x-y\\|_2\\le\\epsilon\\right\\}\n\\] is the closed \\(\\epsilon\\)-neighborhood of \\(A\\).\n\n\nHere, \\[\nA_\\epsilon=A+\\epsilon B^n\n\\] so the Borel measurability of \\(A+B^n(0,\\epsilon)\\) matters.\nOf course, \\(A_\\epsilon\\) is \\(\\gamma_n\\)-measurable, meaning that there exist Borel sets \\(B_1,B_2\\in\\mathcal{B}(\\mathbb{R}^n)\\) such that \\[\nB_1\\subset A_\\epsilon\\subset B_2,\n\\] \\[\n\\mu(B_2\\setminus B_1)=0.\n\\] Thus, the above theorem can be understood as implicitly assuming the Borel probability measure \\(\\gamma_n\\) to be completed in the Lebesgue sense.\nAs it turns out in Section 3.2, the Borel measurability of \\(A+B^n(0,\\epsilon)\\) is not guaranteed, despite the fact \\(B^n(0,\\epsilon)\\) is a closed and compact subset."
  },
  {
    "objectID": "posts/2025/FunctionalAnalysis/MinkowskiSum.html#conditions-assuring-to-be-borel",
    "href": "posts/2025/FunctionalAnalysis/MinkowskiSum.html#conditions-assuring-to-be-borel",
    "title": "Measurability of the Minkowski Sum of Two Sets",
    "section": "2 Conditions assuring to be Borel",
    "text": "2 Conditions assuring to be Borel\n\n\n\n\n\n\nProposition\n\n\n\nLet \\(A,B\\in\\mathcal{B}(\\mathbb{R}^n)\\) be Borel sets.\n\nIf either \\(A\\) or \\(B\\) is open, then \\(A+B\\) is open.\nEven when \\(A\\) and \\(B\\) are closed, \\(A+B\\) may not be closed.\nAdditionally imposing either \\(A\\) or \\(B\\) to be compact, then \\(A+B\\) is closed.\n\nAll of the above statements remain valid when an arbitrary topological vector space is considered in place of \\(\\mathbb{R}^n\\).\n\n\n\n\n\n\n\n\nProof\n\n\n\n\n\n\nGiven \\[\nA+B=\\bigcup_{b\\in B}(A+b),\n\\] we see that \\(A+B\\) is open if either \\(A\\) or \\(B\\) is open. Note \\(\\bullet+b:\\mathbb{R}^n\\to\\mathbb{R}^n\\) is a homeomorphism, so \\(A+b\\) is open.\nLet \\(n=1\\) and \\[\nA:=\\mathbb{N}^+,\n\\] \\[\nB:=\\left\\{-n+\\frac{1}{n}\\in\\mathbb{R}\\:\\middle|\\:n=2,3,\\cdots\\right\\}.\n\\] Both sets \\(A,B\\) are discrete subsets of \\(\\mathbb{R}\\), hence closed. However, \\(A+B\\) is not closed. Indeed, \\(\\{1/n\\}_{n\\ge2}\\subset A+B\\) but its limit point \\(0\\notin A+B\\).\nLet us assume \\(A\\) to be compact and take an arbitrary sequence \\(\\{a_n+b_n\\}\\subset A+B\\) converging to a limit, denoted \\(x\\in\\overline{A+B}\\). Compactnes of \\(A\\) implies the existence of a convergent subsequence \\(\\{a_{n_k}\\}\\subset\\{a_n\\}\\) converging to some \\(a\\in A\\). Then, \\(\\{b_{n_k}\\}\\subset B\\) also converges and its limit is \\(x-a\\in B\\), which belongs to \\(B\\) because \\(B\\) is closed. Hence, \\(x=a+(x-a)\\in A+B\\), giving a sufficient condition for \\(A+B\\) to be closed."
  },
  {
    "objectID": "posts/2025/FunctionalAnalysis/MinkowskiSum.html#counterexamples",
    "href": "posts/2025/FunctionalAnalysis/MinkowskiSum.html#counterexamples",
    "title": "Measurability of the Minkowski Sum of Two Sets",
    "section": "3 Counterexamples",
    "text": "3 Counterexamples\n\n3.1 Using subgroups of \\(\\mathbb{R}\\)\n(Erdös and Stone, 1969) gives a counterexample for \\(n\\ge2\\). Astonishingly, for the case \\(n=1\\), the counterexample consists of \\(A\\) being a Cantor, hence compact, set and \\(B\\) being a \\(G_\\delta\\) set.\n\n\n3.2 Using a non-Borel Souslin set of \\(\\mathbb{R}^2\\).\nFor every uncountable Polish space, there exists a non-Borel Souslin set,3 i.e., \\(\\mathcal{B}(X)\\subsetneq\\Sigma^1_1(X)\\), where \\(\\Sigma^1_1(X)\\) represents the class of all Souslin sets of \\(X\\).\nTaking \\(X=[-1,1]\\), we can construct a non-Borel Souslin set \\(A_1'\\in\\Sigma^1_1(X)\\setminus\\mathcal{B}(X)\\), and using this \\(A_1'\\) we are going to construct a counterexample for \\(n\\ge3\\).\nHere, we are in need of the following characterization of Souslin sets:\n\n\n\n\n\n\nTheorem4\n\n\n\nLet \\(X\\) be a Souslin space, a Souslin set which is also Hausdorff, and let \\(A\\subset X\\) its subset. The following are equivalent:\n\n\\(A\\) is a Souslin set;\n\\(A\\) can be represented as \\(A=\\mathrm{pr}_1(F)\\), where \\(F\\overset{\\textrm{closed}}{\\subset}X\\times\\mathbb{N}^\\infty\\);\n\\(A\\) can be represented as \\(A=\\mathrm{pr}_1(B)\\), where \\(B\\subset X\\times\\mathbb{R}\\) is Borel measurable.\n\n\n\nHere we take \\(X:=[-1,1]\\) and \\(A:=A_1'\\), we can find a Borel measurable subset \\(A'\\subset[-1,1]^2\\) such that \\(A_1'=\\mathrm{pr}_1(A')\\).5\nThe next step is crucial, where we map the Borel subset \\(A'\\) to a cylinder \\[\nC:=\\left\\{(x_1,x_2,x_3)\\in\\mathbb{R}^3\\mid x_2^2+x_3^2=1\\right\\},\n\\] using a homeomorphism \\(\\psi:\\mathbb{R}^2\\to\\mathbb{R}^2\\) which satisfies \\[\n\\begin{align*}\n    &\\psi([-1,1]\\times\\{0\\})\\\\\n    &\\qquad\\subset\\left\\{(x_1,x_2)\\in\\mathbb{R}^2\\mid x_1^2+x_2^2=1\\right\\}.\n\\end{align*}\n\\] Such a homeomorphism \\(\\psi\\) takes the segment \\([-1,1]\\) on the \\(x_1\\)-axis into the unit circumference \\(S^1\\) in the \\((x_1,x_2)\\)-plane.\nUsing \\(\\psi\\) as a building block, we constract a homeomorphism \\(\\Psi:\\mathbb{R}^3\\to\\mathbb{R}^3\\) by \\[\n\\Psi(x_1,x_2,x_3):=(x_1,\\psi(x_2,x_3)).\n\\] Such a homeomorphism \\(\\Psi\\) pastes the set \\(A'\\) onto the surface of the cylinder \\(C\\): \\(A:=\\Psi(A')\\subset C\\). Given that \\(\\Psi\\) is a homeomorphism, \\(A\\) is a Borel measurable set.6\nThus, \\(A\\subset C\\subset\\mathbb{R}^3\\) now satisfies the following properties: \\[\n\\biggr(A+B(0,1)\\biggl)\\cap\\biggr(\\mathbb{R}\\times\\{0\\}^2\\biggl)=A_1',\n\\] where \\(A_1'\\notin\\mathcal{B}(X)\\) is non-Borel and \\(B(0,1)\\subset\\mathbb{R}^3\\) is a closed unit ball centered at the origin.7 This scenario is impossible if \\(A+B(0,1)\\) is Borel measurable, since \\(\\mathbb{R}\\times\\{0\\}^2\\) is Borel measurable.\nThis idea is stimulated from (Luiro et al., 2014), which has an arXiv version, Example 2.4."
  },
  {
    "objectID": "posts/2025/FunctionalAnalysis/MinkowskiSum.html#footnotes",
    "href": "posts/2025/FunctionalAnalysis/MinkowskiSum.html#footnotes",
    "title": "Measurability of the Minkowski Sum of Two Sets",
    "section": "Footnotes",
    "text": "Footnotes\n\n\n(Dudley, 2002, p. 497) Theorem 13.2.6, (Kechris, 1995, p. 155) Theorem 21.20.↩︎\n(Borell, 1975), (Sudakov and Tsirel’son, 1974), (Giné and Nickl, 2021, p. 31) Theorem 2.2.3.↩︎\n(Kechris, 1995, p. 85) Theorem 14.2.↩︎\n(Bogachev, 2007, p. 24) Theorem 6.7.2, (Kechris, 1995, p. 86) 14.3.↩︎\nFrom the theorem, we can find a Borel measurable subset \\(B\\subset[-1,1]\\times\\mathbb{R}\\) such that \\(A_1'=\\mathrm{pr}_1(B)\\). Then, we define \\(A':=B\\cap[-1,1]^2\\), which is Bore measurable and still has the property \\(A_1'=\\mathrm{pr}_1(A')\\).↩︎\nFor a complete separable metric space \\(X,Y\\), an image of a Borel set via a Borel measurable injection is again Borel measurable. (Bogachev, 2007, p. 30) Theorem 6.8.6.↩︎\nFor other notations, please consult this post.↩︎"
  }
]